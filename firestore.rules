// DO NOT MODIFY THESE ON FIREBASE'S DASHBOARD.
// THESE RULES ARE CONTROLLED BY FILES IN A GIT REPOSITORY.
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // create and delete should be controlled by functions
    match /users/{userId} {
      allow read;

      allow update: if
        request.auth.uid != null &&
        request.path[4:5] == /$(request.auth.uid) &&
        request.resource.data.keys().hasAll(["name", "profileImageURL"]) &&
        request.resource.data.keys().hasOnly(["name", "profileImageURL"]) &&
        request.resource.data.name is string &&
        request.resource.data.name.size() >= 3 &&
        request.resource.data.name.size() < 32 &&
        request.resource.data.profileImageURL == resource.data.profileImageURL;

      match /reactions/{reactionId} {
        allow read: if
          request.auth.uid != null &&
          request.auth.uid == userId;
        
        allow create: if
          request.auth.uid != null &&
          request.auth.uid == userId &&
          request.resource.data.keys().hasAll(["to", "type"]) &&
          request.resource.data.keys().hasOnly(["to", "type"]) &&
          request.resource.data.to is path &&
          request.resource.data.to[3:4] == /posts &&
          (
            request.resource.data.to[5:6] == /answers ||
            request.resource.data.to[5:6] == /comments
          ) &&
          exists(request.resource.data.to) &&
          request.resource.data.type in ["LIKE", "DISLIKE"];

        allow delete: if
          request.auth.uid != null &&
          request.auth.uid == userId;
      }
    }

    match /posts/{postId} {
      allow read;

      match /answers/{answerId} {
        allow read;

        allow create: if
          request.auth.uid != null &&
          request.resource.data.keys().hasAll(["post", "user", "body", "likes", "dislikes"]) &&
          request.resource.data.keys().hasOnly(["post", "user", "body", "likes", "dislikes"]) &&
          request.resource.data.post is path &&
          request.resource.data.post == request.path[0:5] &&
          request.resource.data.user is path &&
          request.resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid) &&
          request.resource.data.body is string &&
          request.resource.data.body.size() >= 8 &&
          request.resource.data.body.size() < 65536 &&
          request.resource.data.likes is int &&
          request.resource.data.likes == 0 &&
          request.resource.data.dislikes is int &&
          request.resource.data.dislikes == 0;
      }
    }
  }
}